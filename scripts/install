#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_send_readme_to_admin
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE
random_key=$(ynh_string_random --length=32)
email=$(ynh_user_get_info $admin 'mail')
password=$(ynh_string_random --length=10)
dav_support=$YNH_APP_ARG_DAV_SUPPORT
signup=$YNH_APP_ARG_SIGNUP
two_factor=$YNH_APP_ARG_TWO_FACTOR
version=$(curl -s https://api.github.com/repos/monicahq/monica/releases/latest | grep 'tag_name' | cut -d\" -f4)

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=language --value=$language
ynh_app_setting_set --app=$app --key=random_key --value=$random_key
ynh_app_setting_set --app=$app --key=dav_support --value=$dav_support
ynh_app_setting_set --app=$app --key=signup --value=$signup
ynh_app_setting_set --app=$app --key=two_factor --value=$two_factor
ynh_app_setting_set --app=$app --key=version --value=$version

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

ynh_install_nodejs --nodejs_version=$NODEJS_VERSION
ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
git clone https://github.com/monicahq/monica.git $final_path
pushd "$final_path"
	git checkout tags/$version
popd

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring PHP-FPM..."

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --usage=low --footprint=low --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SPECIFIC SETUP
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

config="$final_path/.env"

# Enable or disable DAV support for users
if [ $dav_support -eq 0 ]
then
	dav_boolean="false"
	dav="Yes"
else
	dav_boolean="true"
	dav="No"
fi
# Enable or disable signup for public users
if [ $signup -eq 1 ]
then
	sign_boolean="false"
	sign="No"
else
	sign_boolean="true"
	sign="Yes"
fi
# Enable or disable two factor authentication support for  users
if [ $two_factor -eq 1 ]
then
	twof_boolean="true"
	twof="Yes"
else
	twof_boolean="false"
	twof="No"
fi

ynh_add_config --template="../conf/.env" --destination="$config"

#=================================================
# INSTALL COMPOSER DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing Composer dependencies..."

ynh_exec_warn_less ynh_install_composer --phpversion="$phpversion" --workdir="$final_path"

#=================================================
# DEPLOY
#=================================================
ynh_script_progression --message="Deploying..."

update-alternatives --set php /usr/bin/php$phpversion

pushd "$final_path"
	ynh_use_nodejs
	yarn install
	yarn run production
	
	php$phpversion artisan setup:production --email=$email --password=$password  -n --force
	php$phpversion artisan passport:client --password -n > key.txt
	mobile_id=$( cd $final_path && tail -2 key.txt | head -1 | cut -c 12- )
	mobile_key=$( cd $final_path && tail -1 key.txt | cut -c 16- )
	private_key=$(sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' storage/oauth-private.key)
	public_key=$(sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' storage/oauth-public.key)
	ynh_replace_string  --match_string="_IDENTITY_"   --replace_string="$mobile_id"   --target_file="$config"
	ynh_replace_string  --match_string="_KEY_"        --replace_string="$mobile_key"  --target_file="$config"
	ynh_app_setting_set --app=$app --key=mobile_id --value=$mobile_id
	ynh_app_setting_set --app=$app --key=mobile_key --value=$mobile_key
	ynh_app_setting_set --app=$app --key=private_key --value=$private_key
	ynh_app_setting_set --app=$app --key=private_key --value=$public_key
	rm -f key.txt
	php$phpversion artisan config:clear
popd

update-alternatives --set php /usr/bin/php${YNH_DEFAULT_PHP_VERSION}

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_script_progression --message="Storing the config file checksum..."

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$config"

chmod 400 "$config"
chown $app:$app "$config"

#=================================================
# INSTALL THE CRON FILE
#=================================================
ynh_script_progression --message="Installing the cron file..."

echo "* * * * * -u $app /usr/bin/php$phpversion $final_path/artisan schedule:run" > /tmp/cron$app
mv -f /tmp/cron$app /etc/cron.d/$app

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

# Giver API permission to visitors
ynh_permission_create --permission="api" --url="/api" --allowed="visitors" --show_tile="false" --protected="true"
# Giver DAV permission to visitors
ynh_permission_create --permission="dav" --url="/dav" --allowed="visitors" --show_tile="false" --protected="true"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# SEND A README FOR THE ADMIN
#=================================================
# WARNING : theses command are used in INSTALL
# For any update do it in all files

echo "
-----------------------------------------------------------
|
| Welcome to Monica
|
-----------------------------------------------------------
| You can now sign in to your account:
| username: $email
| password: $password
| URL:      https://$domain
| Dav support: $dav
| Allowed registration for new users: $sign
| Allowed Two Factor Authentication for accounts: $twof
| It is advised to change your password after first login.
-----------------------------------------------------------
Setup is done. Have fun.

" > mail_to_send

ynh_send_readme_to_admin --app_message="mail_to_send" --type="install" --recipients="$email"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
